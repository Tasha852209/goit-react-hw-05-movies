{"version":3,"file":"static/js/463.ce2d144a.chunk.js","mappings":"mPAEaA,EAAeC,EAAAA,GAAAA,GAAH,qEAKZC,EAAYD,EAAAA,GAAAA,GAAH,oHAUTE,EAAUF,EAAAA,GAAAA,GAAH,0I,qICZPG,EAAU,mCAAG,WAAMC,GAAN,gGAECC,EAAAA,EAAAA,IAJV,4CAI8B,CACzCC,OAAQ,CACNC,QAPQ,mCAQRH,MAAAA,KALkB,cAEhBI,EAFgB,yBAQfA,EAASC,KAAKC,SARC,sCAUtBC,QAAQC,MAAM,SAAU,KAAMC,SAVR,8DAAH,sDCJvB,EAAmC,oCAAnC,EAAsF,gCAAtF,EAAsI,iC,SCEzHC,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,kBAAMH,SAPa,SAAAI,GACnBA,EAAEC,iBACFL,EAASE,GACTC,EAAS,GACV,EAG+BG,UAAWC,EAAzC,WACE,kBACEC,KAAK,OACLN,MAAOA,EACPO,SAAU,SAAAL,GAAC,OAAID,EAASC,EAAEM,OAAOR,MAAtB,EACXI,UAAWC,KAEb,mBAAQC,KAAK,SAASF,UAAWC,EAAjC,sBAKL,E,kBC8BD,EAhDe,WAAO,IAAD,EACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,sBAApB,QAAsC,GACvD,GAA4Bd,EAAAA,EAAAA,UAAS,IAArC,eAAOe,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAQXC,EAAW,mCAAG,WAAM/B,GAAN,gGAEKD,EAAWC,GAFhB,OAEV2B,EAFU,OAGhBC,EAAUD,GAHM,gDAKhBpB,QAAQC,MAAM,yBAA0B,KAAMC,SAL9B,yDAAH,sDAejB,OANAuB,EAAAA,EAAAA,YAAU,WACY,KAAhBP,GACFM,EAAYN,EAEf,GAAE,CAACA,KAGF,4BACE,SAACf,EAAD,CAAWG,MAAOY,EAAad,SAvBT,SAAAsB,GACX,KAATA,IACJT,EAAgB,CAAEC,YAAaQ,IAC/BF,EAAYE,GACb,KAoBG,SAAC,KAAD,UACGN,EAAOO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,GAAE,UAAKF,GACPG,MAAO,CACLC,KAAMV,GAHV,SAMGO,KAPSD,EADJ,QAenB,C","sources":["pages/Home.styled.js","api/fetch-searching-films.js","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MainHeadline = styled.h1`\n  margin-bottom: 30px;\n  margin-top: 20px;\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nexport const MovieLi = styled.li`\n  margin-bottom: 5px;\n  transition: background-color 0.3s ease;\n\n  &:hover,\n  &:focus {\n    color: red;\n  }\n`;\n","import axios from 'axios';\n\nconst API_KEY = 'b77cc87cf8eb75174deef76365295e27';\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\nexport const findMovies = async query => {\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.error('Error:', error.message);\n    throw error;\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search-container\":\"SearchBar_search-container__2KvMZ\",\"search-input\":\"SearchBar_search-input__zBoHD\",\"search-button\":\"SearchBar_search-button__kHuaJ\"};","import React, { useState } from 'react';\nimport styles from './SearchBar.module.css';\n\nexport const SearchBar = ({ onSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={styles['search-container']}>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={e => setValue(e.target.value)}\n        className={styles['search-input']}\n      />\n      <button type=\"submit\" className={styles['search-button']}>\n        Search\n      </button>\n    </form>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { findMovies } from '../api/fetch-searching-films';\nimport { SearchBar } from '../components/SearchBar/SearchBar';\nimport { Link, useLocation } from 'react-router-dom';\nimport { MovieList, MovieLi } from './Home.styled';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('searchQuery') ?? '';\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const updateQueryString = name => {\n    if (name === '') return;\n    setSearchParams({ searchQuery: name });\n    fetchMovies(name);\n  };\n\n  const fetchMovies = async query => {\n    try {\n      const movies = await findMovies(query);\n      setMovies(movies);\n    } catch (error) {\n      console.error('Error fetching movies:', error.message);\n    }\n  };\n\n  useEffect(() => {\n    if (searchQuery !== '') {\n      fetchMovies(searchQuery);\n    }\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <SearchBar value={searchQuery} onSubmit={updateQueryString} />\n      <MovieList>\n        {movies.map(({ id, title }) => (\n          <MovieLi key={id}>\n            <Link\n              to={`${id}`}\n              state={{\n                from: location,\n              }}\n            >\n              {title}\n            </Link>\n          </MovieLi>\n        ))}\n      </MovieList>\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["MainHeadline","styled","MovieList","MovieLi","findMovies","query","axios","params","api_key","response","data","results","console","error","message","SearchBar","onSubmit","useState","value","setValue","e","preventDefault","className","styles","type","onChange","target","useSearchParams","searchParams","setSearchParams","searchQuery","get","movies","setMovies","location","useLocation","fetchMovies","useEffect","name","map","id","title","to","state","from"],"sourceRoot":""}